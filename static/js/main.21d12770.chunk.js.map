{"version":3,"sources":["Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","props","changeCategorySelected","slug","setState","postsSelected","state","blog","categorySelected","fetch","then","res","json","posts","console","log","loader","postCategories","month_at","month","className","Dropdown","Toggle","id","icon","faCaretDown","Menu","this","map","title","Item","href","onClick","e","faFilter","length","description","posted_on","small_image","authorname","src","alt","slice","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21d12770.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFilter } from \"@fortawesome/free-solid-svg-icons\";\nimport { getByTitle } from \"@testing-library/react\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loader: true,\n      postCategories: [],\n      blog: [],\n      categorySelected: \"all\",\n      postsSelected: [],\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://api.edyoda.com/v1/blog/postcategories/\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ postCategories: res }));\n    fetch(\"https://api.edyoda.com/v1/blog/\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ blog: res, postsSelected: res }));\n  }\n  changeCategorySelected = (slug) => {\n    if (slug === \"all\") {\n      this.setState({\n        postsSelected: this.state.blog,\n        categorySelected: \"all\",\n      });\n    } else {\n      this.setState({ categorySelected: slug });\n      fetch(`https://api.edyoda.com/v1/blog/${slug}/`)\n        .then((res) => res.json())\n        .then((res) => this.setState({ postsSelected: res.posts }));\n      console.log(\"here\");\n    }\n  };\n\n  render() {\n    let month_at = (month) => {\n      switch (month) {\n        case \"01\":\n          return \"Jan\";\n          break;\n        case \"02\":\n          return \"Feb\";\n          break;\n        case \"03\":\n          return \"Mar\";\n          break;\n        case \"04\":\n          return \"Apr\";\n          break;\n        case \"05\":\n          return \"May\";\n          break;\n        case \"06\":\n          return \"Jun\";\n          break;\n        case \"07\":\n          return \"Jul\";\n          break;\n        case \"08\":\n          return \"Aug\";\n          break;\n        case \"09\":\n          return \"Sep\";\n          break;\n        case \"10\":\n          return \"Oct\";\n          break;\n        case \"11\":\n          return \"Nov\";\n          break;\n        case \"12\":\n          return \"Dec\";\n          break;\n        default:\n          return \"Default Case\";\n          break;\n      }\n    };\n    return (\n      <>\n        <nav>\n          <div className=\"logo\">\n            <div className=\"edyoda-logo\">Edyoda</div>\n            <p className=\"stories-logo\">Stories</p>\n          </div>\n          <div className=\"nav-links\">\n            <ul className=\"categories-wrapper\">\n              <Dropdown>\n                <Dropdown.Toggle\n                  className=\"dropdown-toggle\"\n                  id=\"dropdown-basic\"\n                >\n                  Explore Categories{\" \"}\n                  <span>\n                    <FontAwesomeIcon icon={faCaretDown} />\n                  </span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu className=\"dropdown-menu\">\n                  {this.state.postCategories &&\n                    this.state.postCategories.map(({ title, slug }) => {\n                      return (\n                        <Dropdown.Item\n                          className=\"dropdown-item\"\n                          href={`#/${slug}`}\n                          onClick={(e) => {\n                            this.changeCategorySelected(slug);\n                          }}\n                        >\n                          {title}\n                        </Dropdown.Item>\n                      );\n                    })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </ul>\n            <ul className=\"right-menus\">\n              <div className=\"edyoda-text\">\n                <p>\n                  EdYoda is free learning and knowledge <br /> sharing platform\n                  for techies\n                </p>\n              </div>\n              <div className=\"edyoda-signup\">\n                <button>Go To Main Website</button>\n              </div>\n            </ul>\n          </div>\n        </nav>\n        <main>\n          <div className=\"latest-posts-container\">\n            <h3 className=\"latest-posts-heading\">Latest Posts</h3>\n            <div className=\"category-filter-section\">\n              <div className=\"category-filter-heading\">\n                <div className=\"category-filter-icon\">\n                  <FontAwesomeIcon icon={faFilter}></FontAwesomeIcon>\n                </div>\n                <p className=\"category-filter-text\">Filter by Category</p>\n              </div>\n              <div className=\"category-list\">\n                <div\n                  className={\n                    \"all\" === this.state.categorySelected\n                      ? \"category-item category-item-selected\"\n                      : \"category-item\"\n                  }\n                  id=\"all\"\n                  onClick={(e) => this.changeCategorySelected(\"all\")}\n                >\n                  All\n                </div>\n                {this.state.postCategories &&\n                  this.state.postCategories.map(({ title, slug }) => {\n                    return (\n                      <div\n                        className={\n                          slug === this.state.categorySelected\n                            ? \"category-item category-item-selected\"\n                            : \"category-item\"\n                        }\n                        id={slug}\n                        onClick={(e) => this.changeCategorySelected(slug)}\n                      >\n                        {title}\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n            <div className=\"blog-card-section\">\n              {this.state.postsSelected &&\n                this.state.postsSelected.length &&\n                this.state.postsSelected.map(\n                  ({\n                    title,\n                    description,\n                    posted_on,\n                    small_image,\n                    authorname,\n                  }) => {\n                    return (\n                      <div className=\"blog-card-container\">\n                        <div className=\"blog-image-container\">\n                          <img src={small_image} alt={title}></img>\n                        </div>\n                        <div className=\"blog-details-container\">\n                          <h3>{title}</h3>\n                          <p>\n                            {authorname}{\" \"}\n                            <span className=\"blog-details-date\">\n                              {\"| \"}\n                              {posted_on.slice(8, 10)}{\" \"}\n                              {month_at(posted_on.slice(5, 7))}{\" \"}\n                              {posted_on.slice(0, 4)}\n                            </span>\n                          </p>\n                          <div>{description}</div>\n                        </div>\n                      </div>\n                    );\n                  }\n                )}\n            </div>\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import './App.css';\nimport Main from './Main';\n\nfunction App() {\n  return (\n    <>\n      <Main/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}